services:
  identity-platform-login-ui:
    image: ghcr.io/canonical/identity-platform-login-ui:v0.23.0
    environment:
      - KRATOS_PUBLIC_URL=http://kratos:4433
      - KRATOS_ADMIN_URL=http://kratos:4434
      - HYDRA_ADMIN_URL=http://hydra:4445
      - BASE_URL=http://localhost:4455
      - COOKIES_ENCRYPTION_KEY=WrfOcYmVBwyduEbKYTUhO4X7XVaOQ1wF
      - PORT=4455
      - LOG_LEVEL=DEBUG
      - TRACING_ENABLED=FALSE
      - MFA_ENABLED=FALSE
      - OPENFGA_API_SCHEME=http
      - OPENFGA_API_HOST=openfga:8080
    ports:
      - "4455:4455"
    networks:
      - intranet
    restart: on-failure
  kratos-migrate:
    image: ghcr.io/canonical/kratos:1.3.1
    environment:
      - DSN=postgres://kratos:kratos@postgres:5432/kratos?sslmode=disable
    volumes:
      - type: bind
        source: ./docker/kratos
        target: /etc/config/kratos
    command: exec kratos -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
  kratos:
    depends_on:
      - kratos-migrate
    image: ghcr.io/canonical/kratos:1.3.1
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://kratos:kratos@postgres:5432/kratos?sslmode=disable
      - LOG_LEVEL=trace
      - SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS_0_CLIENT_ID=${CLIENT_ID}
      - SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS_0_CLIENT_SECRET=${CLIENT_SECRET}
    command: exec kratos serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ./docker/kratos
        target: /etc/config/kratos
    networks:
      - intranet
    extra_hosts:
    - "host.docker.internal:host-gateway"
  kratos-setup:
    image: ghcr.io/canonical/kratos:1.3.1
    depends_on:
      - kratos
    restart: "no"
    volumes:
      - type: bind
        source: ./docker/kratos
        target: /etc/config/kratos
    command: exec kratos import identities /etc/config/kratos/identity.json --endpoint http://kratos:4434
    networks:
      - intranet
  hydra:
    image: ghcr.io/canonical/hydra:2.3.0-canonical
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
    command: exec hydra serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: bind
        source: ./docker/hydra
        target: /etc/config/hydra
    environment:
      - DSN=postgres://hydra:hydra@postgres/hydra?sslmode=disable
      - CORS_DEBUG=1
    restart: unless-stopped
    depends_on:
      - hydra-migrate
    networks:
      - intranet
    extra_hosts:
    - "host.docker.internal:host-gateway"
  hydra-migrate:
    image: ghcr.io/canonical/hydra:2.3.0-canonical
    environment:
      - DSN=postgres://hydra:hydra@postgres/hydra?sslmode=disable
    command: exec hydra migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: bind
        source: ./docker/hydra
        target: /etc/config/hydra
    restart: on-failure
    networks:
      - intranet
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'
    networks:
      - intranet
  postgres:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
    environment:
      POSTGRES_USER: hydra
      POSTGRES_PASSWORD: hydra
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U hydra" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - intranet
  migrateopenfga:
    image: openfga/openfga:v1.9.0
    command: migrate --datastore-engine postgres --datastore-uri 'postgresql://openfga:openfga@postgres/openfga?sslmode=disable'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - intranet
  openfga:
    image: openfga/openfga:v1.9.0
    environment:
      OPENFGA_DATASTORE_ENGINE: "postgres"
      OPENFGA_DATASTORE_URI: "postgresql://openfga:openfga@postgres/openfga?sslmode=disable"
      OPENFGA_AUTHN_PRESHARED_KEYS: "42"
    command: run
    ports:
      - 8080:8080
      - 8081:8081
      - 3000:3000
    depends_on:
      migrateopenfga:
        condition: service_completed_successfully
    networks:
      - intranet
networks:
  intranet:
